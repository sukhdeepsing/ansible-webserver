---
name: Ansible-GitHub actions
on: push
jobs:
  repo_updated:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@master
  install_ansible:
    needs: repo_updated
    runs-on: self-hosted
    steps:
    - name: Installing ansible 
      run: |
        sudo apt-get update -y
        sudo apt install -y  ansible
        ansible --version
  install_ansible_lint:
    needs: repo_updated
    runs-on: self-hosted
    steps:
    - name: Installing ansible-lint
      run: |
        sudo apt-get update -y
        sudo apt-get install -y ansible-lint
        ansible-lint --version
  run_ansible_lint:
    needs: [install_ansible, install_ansible_lint]
    runs-on: self-hosted
    steps:
    - name: Linting ansible playbooks
      run: ansible-lint
  install_apache:
    needs: run_ansible_lint
    runs-on: self-hosted
    steps:
    - name: Installing apache
      run: |
        workdir="${GITHUB_WORKSPACE}"
        ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -u ubuntu -i $workdir/host_inventory $workdir/playbooks/apache-install.yml --private-key '/home/ubuntu/.ssh/vm-instance-key.pem'
  website-update:
    needs: install_apache
    runs-on: self-hosted
    steps:
    - name: website updating
      run: |
        workdir="${GITHUB_WORKSPACE}"
        ANSIBLE_HOST_KEY_CHECKING=False export ANSIBLE_ROLES_PATH=$workdir/roles && ansible-playbook -u ubuntu -i $workdir/host_inventory $workdir/playbooks/website-update.yml --private-key '/home/ubuntu/.ssh/vm-instance-key.pem'
  website-test:
    needs: website-update
    runs-on: self-hosted
    steps:
    - name: website testing
      run: |
        workdir="${GITHUB_WORKSPACE}"
        ANSIBLE_HOST_KEY_CHECKING=False export    ANSIBLE_ROLES_PATH=$workdir/roles && ansible-playbook -u ubuntu -i $workdir/host_inventory $workdir/playbooks/website-test.yml --private-key '/home/ubuntu/.ssh/vm-instance-key.pem'
  slack_on_failure:
    runs-on: self-hosted
    needs: [repo_updated, install_ansible, install_ansible_lint, run_ansible_lint, install_apache, website-update, website-test]
    if: ${{ failure() && (needs.repo_updated.result == 'failure' || needs.install_ansible.result == 'failure' || needs.install_ansible_lint.result == 'failure' || needs.run_ansible_lint.result == 'failure' || needs.install_apache.result == 'failure' || needs.website-update.result == 'failure' || needs.website-test.result == 'failure') }}

    steps:
      - name: Send Slack notification on failure
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "GitHub Action pipeline failed!",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub Action pipeline failed!"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  slack_on_success:
    runs-on: self-hosted
    needs: [repo_updated, install_ansible, install_ansible_lint, run_ansible_lint, install_apache, website-update, website-test]
    if: ${{ needs.repo_updated.result == 'success' && needs.install_ansible.result == 'success' && needs.install_ansible_lint.result == 'success' && needs.run_ansible_lint.result == 'success' && needs.install_apache.result == 'success' && needs.website-update.result == 'success' && needs.website-test.result == 'success' }}
    steps:
      - name: Send Slack notification on success
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "GitHub Action pipeline succeeded!",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub Action pipeline succeeded!"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}



